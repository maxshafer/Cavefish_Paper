library(tidyr)
library(reshape2)
library(ggpubr)
# Load subsets
setwd("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/AstMex_Hypo")
Idents(hypo) <- "species"
hypo.surface <- subset(hypo, idents = "astyanax_surface")
hypo.cave <- subset(hypo, idents = "astyanax_cave")
## Load marker gene lists
gene.lists <- readRDS(file = "marker_gene_lists.rds")
hypo.ast <- hypo
# Load subsets
setwd("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/AstMex_Hypo")
library(Seurat)
library(stringr)
library(dplyr)
library(data.table)
library(purrr)
library(patchwork)
library(viridis)
# Subset out the blood lineage cells
Idents(hypo.ast) <- "Cluster"
immune <- subset(hypo.ast, idents = c("Erythrocytes", "Tcells", "Bcells", "Mast_cells", "Neutrophils", "Macrophages", "Microglia"))
immune <- FindVariableFeatures(immune, selection.method = "mvp")
immune <- ScaleData(object = immune, features = VariableFeatures(immune))
immune <- RunPCA(object = immune, features = VariableFeatures(immune), npcs = 100, set.seed = 0)
# ElbowPlot(object = immune, ndims = 100) # 25 PCs looks good
immune <- RunTSNE(object = immune, reduction = "pca", dims = 1:25, tsne.method = "Rtsne", reduction.name = "tsne", reduction.key = "tsne_", seed.use = 1, check_duplicates = F)
cols0 <- c("#FDE725FF", "#22A884FF")
cols3 <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA", "#77AADD", "#117777", "#44AAAA", "#77CCCC", "#777711", "#AAAA44", "#DDDD77", "#774411", "#AA7744", "#DDAA77", "#771122", "#AA4455", "#DD7788")
DimPlot(object = immune, group.by = "species", reduction = "tsne", pt.size = .25, label = FALSE, cols = cols0) + NoAxes() + theme(legend.position = c(0.8,0.9), legend.background = element_blank()) + guides(color = guide_legend(ncol = 1, override.aes = list(size = 2)))
immune.morph <- DimPlot(object = immune, group.by = "species", reduction = "tsne", pt.size = .25, label = FALSE, cols = cols0) + NoAxes() + theme(legend.position = c(0.8,0.9), legend.background = element_blank()) + guides(color = guide_legend(ncol = 1, override.aes = list(size = 2)))
immune.subtype <- DimPlot(object = immune, group.by = "Cluster", reduction = "tsne", pt.size = .25, label = TRUE) + NoLegend() + NoAxes()
immune.subcluster <- DimPlot(object = immune, group.by = "Subcluster", reduction = "tsne", pt.size = .25, label = TRUE) + NoLegend() + NoAxes()
immune.orig <- DimPlot(object = immune, group.by = "orig.ident", reduction = "tsne", pt.size = .25, label = FALSE, cols = cols3) + NoAxes() + theme(legend.position = c(0.8,0.9), legend.background = element_blank()) + guides(color = guide_legend(ncol = 2, override.aes = list(size = 5))) + scale_colour_manual(values = cols3)
ccr9a <- FeaturePlot(immune, features = c("ccr9a"), reduction = "tsne", pt.size = .25) + NoAxes() + ggtitle("")
dot.plot <- DotPlot(immune, features = unique(markers$gene), group.by = "species_Cluster", scale.max = 150) + coord_flip() + theme(axis.text = element_text(size = 8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_color_viridis(option = "A")
cell.types <- unique(immune@meta.data$morph_Cluster)
cell.types <- cell.types[table(Idents(immune)) > 3]
Idents(immune) <- "morph_Cluster"
Idents(immune) <- factor(Idents(immune), levels = levels(immune@meta.data$morph_Cluster))
morph_subtype_markers <- FindAllMarkers(immune, max.cells.per.ident = 500, only.pos = T)
markers <- morph_subtype_markers %>% group_by(cluster) %>% top_n(3, avg_logFC)
morph_subtype_markers <- FindAllMarkers(immune, max.cells.per.ident = 500, only.pos = T)
levels(Idents(immune))
head(immune@meta.data)
cell.types <- unique(immune@meta.data$morph_Cluster)
cell.types
cell.types <- cell.types[table(Idents(immune)) > 3]
cell.types
table(Idents(immune))
head(Idents(immune))
Idents(immune) <- "morph_Cluster"
head(Idents(immune))
levels(immune@meta.data$morph_Cluster)
levels(Idents(immune))
# Idents(immune) <- factor(Idents(immune), levels = levels(immune@meta.data$morph_Cluster))
morph_subtype_markers <- FindAllMarkers(immune, max.cells.per.ident = 500, only.pos = T)
markers <- morph_subtype_markers %>% group_by(cluster) %>% top_n(3, avg_logFC)
dot.plot <- DotPlot(immune, features = unique(markers$gene), group.by = "species_Cluster", scale.max = 150) + coord_flip() + theme(axis.text = element_text(size = 8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + scale_color_viridis(option = "A")
tsnes <- (immune.subtype + immune.morph + ccr9a + plot_layout(nrow = 3))
tsnes / dot.plot + plot_layout(ncol = 2, widths = c(1.5,1), guides = "collect")
library(Seurat)
library(viridis)
library(ggplot2)
setwd("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/AstMex_Hypo")
## Set colours for tsne
cols0 <- c("#FDE725FF", "#22A884FF")
cols3 <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA", "#77AADD", "#117777", "#44AAAA", "#77CCCC", "#777711", "#AAAA44", "#DDDD77", "#774411", "#AA7744", "#DDAA77", "#771122", "#AA4455", "#DD7788")
DimPlot(object = hypo, group.by = "Cluster", reduction = "tsne", pt.size = .05, label = F,  label.size = 5) + NoLegend() + NoAxes()
png("Figures/hypo_cluster_plot_Cluster_nolab.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo, group.by = "Cluster", reduction = "tsne", pt.size = .05, label = F,  label.size = 5) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Cluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo, group.by = "Cluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 5) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 2) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_species_morph.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo, group.by = "species", reduction = "tsne", pt.size = .05, label = F,  label.size = 2, cols = cols0) + NoAxes() + theme(legend.position = c(0.75,0.95), legend.background = element_blank()) + guides(color = guide_legend(ncol = 2, override.aes = list(size = 5)))
dev.off()
png("Figures/hypo_cluster_plot_orig.ident_nolab.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo, group.by = "orig.ident", reduction = "tsne", pt.size = .05, label = F,  label.size = 2) + NoAxes() + NoLegend() + scale_colour_manual(values = cols3)
dev.off()
png("Figures/hypo_cluster_plot_orig.ident.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo, group.by = "orig.ident", reduction = "tsne", pt.size = .05, label = F,  label.size = 2) + NoAxes() + theme(legend.position = c(0.91,0.87), legend.background = element_blank()) + guides(color = guide_legend(ncol = 2, override.aes = list(size = 5))) + scale_colour_manual(values = cols3)
dev.off()
# DotPlots for major markers
png("Figures/hypo_dotplots_markers.png", height = 10, width = 6.5, units = "in", res = 500)
DotPlot(object = hypo, features = rev(c("gng3", "slc17a6a", "gad1b", "her15.1", "prdx1", "otpb", "pfn1", "mpz", "mrc1a", "epd", "hopx", "hbaa2")), group.by = "Cluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
dev.off()
# DotPlots for Cluster marker genes
gene.lists <- readRDS("marker_gene_lists.rds")
genes.to.plot.ast <- lapply(gene.lists[[1]], function(x) row.names(x)[1:2])
ast.markers <- DotPlot(hypo, features = rev(unique(unlist(genes.to.plot.ast))), group.by = "Cluster", scale.max = 200) + coord_flip() + scale_color_viridis() + theme(axis.text.y = element_text(size = 6), axis.text.x = element_text(size = 6, angle = 90, hjust = 1, vjust = 0.5), axis.title = element_blank())
ast.markers
png("Figures/hypo_dotplots_Cluster_markers.png", height = 10, width = 6.5, units = "in", res = 500)
ast.markers
dev.off()
dev.off()
png("Figures/hypo_dotplots_Cluster_markers.png", height = 10, width = 6.5, units = "in", res = 500)
ast.markers
dev.off()
hypo.ast
# Make neurotransmitter dot plot for Neuronal subclusters
Idents(hypo.ast) <- "Cluster"
hypo.ast.neuronal <- subset(hypo.ast, ident = levels(Idents(hypo.ast))[grep("Neuronal", levels(Idents(hypo.ast)))])
hypo.ast.neuronal
nt.plot <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b")), group.by = "Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot
nt.plot <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a","gad1b")), group.by = "Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot
Idents(hypo.integrated) <- "integrated_Cluster"
hypo.integrated.neuronal <- subset(hypo.integrated, ident = levels(Idents(hypo.integrated))[grep("Neuronal", levels(Idents(hypo.integrated)))])
nt.plot <- DotPlot(object = hypo.integrated.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot
nt.plot.ast
nt.plot.ast <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a","gad1b")), group.by = "Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.ast <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.ast
nt.plot.ast <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a","gad1b")), group.by = "Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.ast <- nt.plot.ast + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot <- DotPlot(object = hypo.integrated.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot
nt.plot.ast
library(Seurat)
library(dplyr)
library(tidyr)
library(reshape2)
library(viridis)
library(ggplot2)
setwd("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/DanRer_Hypo")
## Load objects
hypo.zeb <- readRDS("DanRer_65k.rds")
## Set colours for tsne
cols <- c("#414487FF") # Yellow, green, blue from viridis
cols3 <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA", "#77AADD", "#117777", "#44AAAA", "#77CCCC", "#777711", "#AAAA44", "#DDDD77", "#774411", "#AA7744", "#DDAA77", "#771122", "#AA4455", "#DD7788")
## Make TSNE graphs
png("Figures/hypo_cluster_plot_Cluster_nolab.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Cluster", reduction = "tsne", pt.size = .05, label = F,  label.size = 5) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Cluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Cluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 5) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 2) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_species_morph.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "species", reduction = "tsne", pt.size = .05, label = F,  label.size = 2, cols = cols) + NoAxes() + theme(legend.position = c(0.91,0.87), legend.background = element_blank()) + guides(color = guide_legend(ncol = 2, override.aes = list(size = 5)))
dev.off()
png("Figures/hypo_cluster_plot_orig.ident_nolab.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "orig.ident", reduction = "tsne", pt.size = .05, label = F,  label.size = 2) + NoAxes() + NoLegend() + scale_colour_manual(values = cols3)
dev.off()
png("Figures/hypo_cluster_plot_orig.ident.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "orig.ident", reduction = "tsne", pt.size = .05, label = F,  label.size = 2) + NoAxes() + theme(legend.position = c(0.91,0.87), legend.background = element_blank()) + guides(color = guide_legend(ncol = 2, override.aes = list(size = 5))) + scale_colour_manual(values = cols3)
dev.off()
setwd("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/DanRer_Hypo")
## Load objects
hypo.zeb <- readRDS("DanRer_65k_vR.rds")
## Set colours for tsne
cols <- c("#414487FF") # Yellow, green, blue from viridis
cols3 <- c("#771155", "#AA4488", "#CC99BB", "#114477", "#4477AA", "#77AADD", "#117777", "#44AAAA", "#77CCCC", "#777711", "#AAAA44", "#DDDD77", "#774411", "#AA7744", "#DDAA77", "#771122", "#AA4455", "#DD7788")
## Make TSNE graphs
png("Figures/hypo_cluster_plot_Cluster_nolab.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Cluster", reduction = "tsne", pt.size = .05, label = F,  label.size = 5) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Cluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Cluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 5) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 2) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_species_morph.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "species", reduction = "tsne", pt.size = .05, label = F,  label.size = 2, cols = cols) + NoAxes() + theme(legend.position = c(0.91,0.87), legend.background = element_blank()) + guides(color = guide_legend(ncol = 2, override.aes = list(size = 5)))
dev.off()
png("Figures/hypo_cluster_plot_orig.ident_nolab.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "orig.ident", reduction = "tsne", pt.size = .05, label = F,  label.size = 2) + NoAxes() + NoLegend() + scale_colour_manual(values = cols3)
dev.off()
png("Figures/hypo_cluster_plot_orig.ident.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "orig.ident", reduction = "tsne", pt.size = .05, label = F,  label.size = 2) + NoAxes() + theme(legend.position = c(0.91,0.87), legend.background = element_blank()) + guides(color = guide_legend(ncol = 2, override.aes = list(size = 5))) + scale_colour_manual(values = cols3)
dev.off()
# DotPlots for major markers
png("Figures/hypo_dotplots_markers.png", height = 10, width = 6.5, units = "in", res = 500)
DotPlot(object = hypo.zeb, features = rev(c("gng3", "slc18a3a", "slc44a2", "slc44a5a", "slc44a5b", "slc17a6a", "slc17a6b", "slc6a9", "gad1b", "gad2", "slc32a1", "her4.2", "prdx1", "otpa", "cd74a", "mpz", "mrc1a", "epd", "hopx", "ba1")), group.by = "Cluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
dev.off()
# DotPlots for Cluster marker genes
gene.lists <- readRDS("marker_gene_lists.rds")
genes.to.plot.zeb <- lapply(gene.lists[[1]], function(x) row.names(x)[1:2])
zeb.markers <- DotPlot(hypo.zeb, features = rev(unique(unlist(genes.to.plot.zeb))), group.by = "Cluster", scale.max = 200) + coord_flip() + scale_color_viridis() + theme(axis.text.y = element_text(size = 6), axis.text.x = element_text(size = 6, angle = 90, hjust = 1, vjust = 0.5), axis.title = element_blank())
png("Figures/hypo_dotplots_Cluster_markers.png", height = 10, width = 6.5, units = "in", res = 500)
zeb.markers
dev.off()
Idents(hypo.zeb) <- "Cluster"
hypo.zeb.neuronal <- subset(hypo.zeb, ident = levels(Idents(hypo.zeb))[grep("Neuronal", levels(Idents(hypo.zeb)))])
nt.plot.zeb <- DotPlot(object = hypo.zeb.neuronal, features = rev(c("slc17a6a","gad1b")), group.by = "Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.zeb <- nt.plot.zeb + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.zeb
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect")
nt.plot.zeb <- DotPlot(object = hypo.zeb.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.zeb <- nt.plot.zeb + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.zeb
nt.plot.zeb <- DotPlot(object = hypo.zeb.neuronal, features = rev(c("slc17a6b", "gad2")), group.by = "Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.zeb <- nt.plot.zeb + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect")
index <- as.data.frame(unique(hypo.integrated@meta.data[,c("integrated_Subtype", "integrated_SubclusterType", "integrated_SubclusterType_number")]))
head(hypo.integrated@meta.data)
index <- as.data.frame(unique(hypo.integrated@meta.data[,c("integrated_Cluster", "integrated_Subcluster", "integrated_Subcluster_number")]))
index <- index[order(index[,1], index[,3]),]
index <- unique(index[,c(1,2)])
head(index)
hypo.integrated@meta.data$integrated_Subcluster <- factor(hypo.integrated@meta.data$integrated_Subcluster, levels = index$integrated_Subcluster)
nt.plot <- DotPlot(object = hypo.integrated.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect")
View(index)
index <- as.data.frame(unique(hypo.integrated@meta.data[,c("integrated_Cluster", "integrated_Subcluster", "integrated_Subcluster_number")]))
index <- index[order(index[,1], index[,3]),]
View(index)
order(index[,1], index[,3])
?order
order(10,1,2,3,4)
order(c(10,1,2,3,4))
index <- index[order(index[,1], index[,3]),]
View(index)
index <- index[order(index[,3]),]
View(index)
index <- index[order(index[,3], index[,1]),]
View(index)
index <- index[order(index[,3], index[,2]),]
View(index)
index <- index[order(index[,1], index[,2]),]
View(index)
index <- index[order(index[,1], index[,3]),]
View(index)
index <- index[order(index[,1], as.numeric(index[,3])),]
View(index)
index <- as.data.frame(unique(hypo.integrated@meta.data[,c("integrated_Cluster", "integrated_Subcluster", "integrated_Subcluster_number")]))
index <- index[order(index[,1], as.numeric(index[,3])),]
index <- unique(index[,c(1,2)])
hypo.integrated@meta.data$integrated_Subcluster <- factor(hypo.integrated@meta.data$integrated_Subcluster, levels = index$integrated_Subcluster)
nt.plot <- DotPlot(object = hypo.integrated.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect")
# Make neurotransmitter dot plot for Neuronal subclusters
Idents(hypo.integrated) <- "integrated_Cluster"
hypo.integrated.neuronal <- subset(hypo.integrated, ident = levels(Idents(hypo.integrated))[grep("Neuronal", levels(Idents(hypo.integrated)))])
nt.plot <- DotPlot(object = hypo.integrated.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster") + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect")
zeb.markers + ast.markers + plot_layout(ncol = 2)
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect")
prop.table <- table(hypo.zeb@meta.data$Cluster, hypo.zeb@meta.data$orig.ident)
prop.table <- as.data.frame(t(apply(prop.table, 1, function(y) {y/sum(y)})))
prop.table$cell_type <- row.names(prop.table)
prop.table <- reshape::melt(prop.table)
prop.table$cell_type <- as.factor(prop.table$cell_type)
prop.plots.zeb <- ggplot(prop.table, aes(x=cell_type, y=value, fill=variable)) + geom_bar(stat="identity")
prop.plots.zeb <- prop.plots.zeb + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + theme(axis.line.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), plot.background = element_rect(fill = "transparent", color = NA), panel.background = element_blank()) + geom_hline(yintercept = 0.5, color = "grey36", size = 1, linetype = "dashed") + ylab("Sample Cluster frequency") + coord_flip() + guides(fill = guide_legend(title = "Origin (cave or surface)")) + scale_fill_manual(values = cols3)
# Ast
prop.table <- table(hypo.ast@meta.data$Cluster, hypo.ast@meta.data$orig.ident)
prop.table <- as.data.frame(t(apply(prop.table, 1, function(y) {y/sum(y)})))
prop.table$cell_type <- row.names(prop.table)
prop.table <- reshape::melt(prop.table)
prop.table$cell_type <- as.factor(prop.table$cell_type)
prop.plots.ast <- ggplot(prop.table, aes(x=cell_type, y=value, fill=variable)) + geom_bar(stat="identity")
prop.plots.ast <- prop.plots.ast + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) + theme(axis.line.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x = element_text(size = 10), axis.title.y = element_blank(), plot.background = element_rect(fill = "transparent", color = NA), panel.background = element_blank()) + geom_hline(yintercept = 0.5, color = "grey36", size = 1, linetype = "dashed") + ylab("Sample Cluster frequency") + coord_flip() + guides(fill = guide_legend(title = "Origin (cave or surface)"))  + scale_fill_manual(values = cols3)
# Plot them together
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect")
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect")
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(90), c("mm")), width = unit(c(35), c("mm")))
# Plot them
dev.new()
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(180), c("mm")), width = unit(c(35), c("mm")))
# Plot them
dev.new()
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(35), c("mm")))
setwd("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/Seurat_v3_Integration/")
png("Figures/test.pdf", res = 500)
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(35), c("mm")))
dev.off()
dev.off()
pdf("Figures/test.pdf", res = 500)
pdf("Figures/test.pdf")
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(35), c("mm")))
dev.off()
?pdf
pdf("Figures/test.pdf", width = 100, height = 250, unit = "mm")
pdf("Figures/test.pdf", width = 10, height = 10)
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(35), c("mm")))
dev.off()
nt.plot.zeb
nt.plot.ast
nt.plot
?DotPlot
nt.plot <- DotPlot(object = hypo.integrated.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster", scale.max = 100) + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot
nt.plot.zeb <- DotPlot(object = hypo.zeb.neuronal, features = rev(c("slc17a6b", "gad2")), group.by = "Subcluster", scale.max = 100) + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.zeb <- nt.plot.zeb + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.ast <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a","gad1b")), group.by = "Subcluster", scale.max = 100) + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.ast <- nt.plot.ast + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot <- DotPlot(object = hypo.integrated.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster", scale.max = 100) + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
pdf("Figures/Neurotransmitter_plots.pdf", width = 10, height = 10)
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(35), c("mm")))
dev.off()
?DotPlot
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(90), c("mm")), width = unit(c(45), c("mm")))
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(100), c("mm")), width = unit(c(45), c("mm")))
nt.plot.zeb <- DotPlot(object = hypo.zeb.neuronal, features = rev(c("slc17a6b", "gad2")), group.by = "Subcluster", scale.max = 200) + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.zeb <- nt.plot.zeb + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot.ast <- DotPlot(object = hypo.ast.neuronal, features = rev(c("slc17a6a","gad1b")), group.by = "Subcluster", scale.max = 200) + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot.ast <- nt.plot.ast + theme(axis.text = element_text(size = 6), axis.title = element_blank())
nt.plot <- DotPlot(object = hypo.integrated.neuronal, features = rev(c("slc17a6a", "slc17a6b", "gad1b", "gad2")), group.by = "integrated_Subcluster", scale.max = 200) + theme(legend.position = "right") + RotatedAxis() + scale_color_viridis()
nt.plot <- nt.plot + theme(axis.text = element_text(size = 6), axis.title = element_blank())
# Plot them
pdf("Figures/Neurotransmitter_plots.pdf", width = 10, height = 10)
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(35), c("mm")))
dev.off()
pdf("Figures/Neurotransmitter_plots.pdf", width = 10, height = 10)
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(30,30,35), c("mm")))
dev.off()
dev.off()
pdf("Figures/Neurotransmitter_plots.pdf", width = 10, height = 10)
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(25,25,35), c("mm")))
dev.off()
pdf("Figures/Neurotransmitter_plots.pdf", width = 10, height = 10)
nt.plot.zeb + nt.plot.ast + nt.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(20,20,25), c("mm")))
dev.off()
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(100), c("mm")), width = unit(c(45), c("mm")))
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(120), c("mm")), width = unit(c(45), c("mm")))
dev.new()
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(120), c("mm")), width = unit(c(45), c("mm")))
pdf("Figures/Zeb-Ast_marker-genes_plots.pdf", width = 10, height = 10)
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(120), c("mm")), width = unit(c(45), c("mm")))
dev.off()
pdf("Figures/Zeb-Ast_marker-genes_plots.pdf", width = 10, height = 10)
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(150), c("mm")), width = unit(c(45), c("mm")))
dev.off()
pdf("Figures/Zeb-Ast_marker-genes_plots.pdf", width = 10, height = 10)
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(140), c("mm")), width = unit(c(45), c("mm")))
dev.off()
pdf("Figures/Zeb-Ast_marker-genes_plots.pdf", width = 10, height = 10)
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(140), c("mm")), width = unit(c(55), c("mm")))
dev.off()
pdf("Figures/Zeb-Ast_marker-genes_plots.pdf", width = 10, height = 10)
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(140), c("mm")), width = unit(c(65), c("mm")))
dev.off()
pdf("Figures/Zeb-Ast_marker-genes_plots.pdf", width = 10, height = 10)
zeb.markers + ast.markers + plot_layout(ncol = 2, guides = "collect", height = unit(c(140), c("mm")), width = unit(c(63), c("mm")))
dev.off()
prop.plots.zeb
# Plot them together
dev.new()
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect", height = unit(c(140), c("mm")), width = unit(c(63), c("mm")))
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect", height = unit(c(90), c("mm")), width = unit(c(45), c("mm")))
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect", height = unit(c(90), c("mm")), width = unit(c(35), c("mm")))
pdf("Figures/Zeb-Ast_prop-plots.pdf", width = 10, height = 10)
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect", height = unit(c(90), c("mm")), width = unit(c(35), c("mm")))
dev.off()
pdf("Figures/Zeb-Ast_prop-plots.pdf", width = 10, height = 10)
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect", height = unit(c(80), c("mm")), width = unit(c(30), c("mm")))
dev.off()
pdf("Figures/Zeb-Ast_prop-plots.pdf", width = 10, height = 10)
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect", height = unit(c(85), c("mm")), width = unit(c(28), c("mm")))
dev.off()
pdf("Figures/Zeb-Ast_prop-plots.pdf", width = 10, height = 10)
prop.plots.zeb + prop.plots.ast + plot_layout(nrow = 2, guides = "collect", height = unit(c(87), c("mm")), width = unit(c(28), c("mm")))
dev.off()
props <- table(hypo.integrated@meta.data$integrated_Cluster, hypo.integrated@meta.data$species)
type_total <- apply(props, 1, function(x) sum(x[1],x[2],x[3]))
type_total <- (type_total/sum(type_total)*1000)
props[,1] <- props[,1]/sum(props[,1])*100
props[,2] <- props[,2]/sum(props[,2])*100
props[,3] <- props[,3]/sum(props[,3])*100
props <- melt(props)
props$type_total <- rep(type_total, 3)
# Order by total population level (can change to another thing)
props$Var1 <- factor(props$Var1, levels = names(sort(type_total)))
prop.plot <- ggplot(props, aes(x = value, y = Var1, width = (type_total), fill = Var2)) + geom_bar(stat = "identity", position = "fill", colour = "black", size = 0) + scale_fill_manual(values = cols) + theme(panel.spacing.y = unit(.25, "mm"), strip.text.y = element_blank(), strip.background = element_blank(), axis.ticks.length.y =  unit(.5, "cm"), axis.text.x = element_text(angle = 45, hjust = 1), axis.text = element_text(size = 8), axis.title.x = element_text(size = 10), legend.title = element_blank()) + xlab("Prop. of total species cells") + ylab(element_blank()) + geom_vline(xintercept = c(0.3333, 0.6666), linetype = "dashed", color = "black") + facet_grid(rows = vars(Var1), scales = "free", space = "free")
prop.plot <- prop.plot + theme(axis.title.x = element_blank())
## Make Integrated figure
# Markers
gene.lists <- readRDS("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/Seurat_v3_Integration/drift_gene_lists_2.rds")
genes.to.plot <- lapply(gene.lists[[1]], function(x) row.names(x)[1:5])
marker.sub <- DotPlot(hypo.integrated, features = rev(unique(unlist(genes.to.plot))), group.by = "integrated_Cluster", scale.max = 200) + coord_flip() + scale_color_viridis() + theme(axis.text.y = element_text(size = 6), axis.text.x = element_text(size = 8, angle = 45, hjust = 1, vjust = 1), axis.title = element_blank())
marker.sub <- marker.sub + theme(axis.text = element_text(size = 6))
marker.sub
markers.sub + prop.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(20,20,25), c("mm")))
marker.sub + prop.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(200), c("mm")), width = unit(c(20,20,25), c("mm")))
marker.sub + prop.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(120), c("mm")), width = unit(c(60,20), c("mm")))
## Make Integrated figure
# Markers
gene.lists <- readRDS("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/Seurat_v3_Integration/drift_gene_lists_2.rds")
genes.to.plot <- lapply(gene.lists[[1]], function(x) row.names(x)[1:5])
marker.sub <- DotPlot(hypo.integrated, features = rev(unique(unlist(genes.to.plot))), group.by = "integrated_Cluster", scale.max = 200) + coord_flip() + scale_color_viridis() + theme(axis.text.y = element_text(size = 6), axis.text.x = element_text(size = 8, angle = 45, hjust = 1, vjust = 1), axis.title = element_blank())
marker.sub <- marker.sub + theme(axis.text = element_text(size = 6))
# Integrated prop plots
props <- table(hypo.integrated@meta.data$integrated_Cluster, hypo.integrated@meta.data$species)
type_total <- apply(props, 1, function(x) sum(x[1],x[2],x[3]))
type_total <- (type_total/sum(type_total)*1000)
props[,1] <- props[,1]/sum(props[,1])*100
props[,2] <- props[,2]/sum(props[,2])*100
props[,3] <- props[,3]/sum(props[,3])*100
props <- melt(props)
props$type_total <- rep(type_total, 3)
# Order by total population level (can change to another thing)
props$Var1 <- factor(props$Var1, levels = names(sort(type_total)))
prop.plot <- ggplot(props, aes(x = value, y = Var1, width = (type_total), fill = Var2)) + geom_bar(stat = "identity", position = "fill", colour = "black", size = 0) + scale_fill_manual(values = cols) + theme(panel.spacing.y = unit(.25, "mm"), strip.text.y = element_blank(), strip.background = element_blank(), axis.ticks.length.y =  unit(.5, "cm"), axis.text.x = element_text(angle = 45, hjust = 1), axis.text = element_text(size = 8), axis.title.x = element_text(size = 10), legend.title = element_blank()) + xlab("Prop. of total species cells") + ylab(element_blank()) + geom_vline(xintercept = c(0.3333, 0.6666), linetype = "dashed", color = "black") + facet_grid(rows = vars(Var1), scales = "free", space = "free")
prop.plot <- prop.plot + theme(axis.title.x = element_blank())
# Put together
marker.sub + prop.plot + plot_layout(ncol = 3, guides = "collect", height = unit(c(120), c("mm")), width = unit(c(60,20), c("mm")))
marker.sub + prop.plot + plot_layout(ncol = 2, guides = "collect", height = unit(c(120), c("mm")), width = unit(c(60,20), c("mm")))
rlang::last_error()
marker.sub
prop.plot
# Integrated prop plots
props <- table(hypo.integrated@meta.data$integrated_Cluster, hypo.integrated@meta.data$species)
type_total <- apply(props, 1, function(x) sum(x[1],x[2],x[3]))
type_total <- (type_total/sum(type_total)*1000)
props[,1] <- props[,1]/sum(props[,1])*100
props[,2] <- props[,2]/sum(props[,2])*100
props[,3] <- props[,3]/sum(props[,3])*100
props <- melt(props)
props$type_total <- rep(type_total, 3)
# Order by total population level (can change to another thing)
props$Var1 <- factor(props$Var1, levels = names(sort(type_total)))
# Order by total population level (can change to another thing)
props$Var1 <- factor(props$Var1, levels = names(sort(props$type_total)))
names(sort(type_total))
head(props)
View(props)
# Order by total population level (can change to another thing)
props$Var1 <- factor(props$Var1, levels = levels(hypo.integrated@meta.data$integrated_Cluster))
levels(hypo.integrated@meta.data$integrated_Cluster)
props$Var1
# Integrated prop plots
props <- table(hypo.integrated@meta.data$integrated_Cluster, hypo.integrated@meta.data$species)
type_total <- apply(props, 1, function(x) sum(x[1],x[2],x[3]))
type_total <- (type_total/sum(type_total)*1000)
props[,1] <- props[,1]/sum(props[,1])*100
props[,2] <- props[,2]/sum(props[,2])*100
props[,3] <- props[,3]/sum(props[,3])*100
props <- melt(props)
props$type_total <- rep(type_total, 3)
head(props)
# Order by total population level (can change to another thing)
props$Var.1 <- factor(props$Var.1, levels = levels(hypo.integrated@meta.data$integrated_Cluster))
prop.plot <- ggplot(props, aes(x = value, y = Var.1, width = (type_total), fill = Var.2)) + geom_bar(stat = "identity", position = "fill", colour = "black", size = 0) + scale_fill_manual(values = cols) + theme(panel.spacing.y = unit(.25, "mm"), strip.text.y = element_blank(), strip.background = element_blank(), axis.ticks.length.y =  unit(.5, "cm"), axis.text.x = element_text(angle = 45, hjust = 1), axis.text = element_text(size = 8), axis.title.x = element_text(size = 10), legend.title = element_blank()) + xlab("Prop. of total species cells") + ylab(element_blank()) + geom_vline(xintercept = c(0.3333, 0.6666), linetype = "dashed", color = "black") + facet_grid(rows = vars(Var1), scales = "free", space = "free")
prop.plot <- prop.plot + theme(axis.title.x = element_blank())
marker.sub + prop.plot + plot_layout(ncol = 2, guides = "collect", height = unit(c(120), c("mm")), width = unit(c(60,20), c("mm")))
prop.plot
prop.plot <- ggplot(props, aes(x = value, y = Var.1, width = (type_total), fill = Var.2)) + geom_bar(stat = "identity", position = "fill", colour = "black", size = 0) + scale_fill_manual(values = cols) + theme(panel.spacing.y = unit(.25, "mm"), strip.text.y = element_blank(), strip.background = element_blank(), axis.ticks.length.y =  unit(.5, "cm"), axis.text.x = element_text(angle = 45, hjust = 1), axis.text = element_text(size = 8), axis.title.x = element_text(size = 10), legend.title = element_blank()) + xlab("Prop. of total species cells") + ylab(element_blank()) + geom_vline(xintercept = c(0.3333, 0.6666), linetype = "dashed", color = "black") + facet_grid(rows = vars(Var.1), scales = "free", space = "free")
prop.plot <- prop.plot + theme(axis.title.x = element_blank())
prop.plot
head(props)
View(props)
# Order by total population level (can change to another thing)
cols <- c("#FDE725FF", "#22A884FF", "#414487FF")
prop.plot <- ggplot(props, aes(x = value, y = Var.1, width = (type_total), fill = Var.2)) + geom_bar(stat = "identity", position = "fill", colour = "black", size = 0) + scale_fill_manual(values = cols) + theme(panel.spacing.y = unit(.25, "mm"), strip.text.y = element_blank(), strip.background = element_blank(), axis.ticks.length.y =  unit(.5, "cm"), axis.text.x = element_text(angle = 45, hjust = 1), axis.text = element_text(size = 8), axis.title.x = element_text(size = 10), legend.title = element_blank()) + xlab("Prop. of total species cells") + ylab(element_blank()) + geom_vline(xintercept = c(0.3333, 0.6666), linetype = "dashed", color = "black") + facet_grid(rows = vars(Var.1), scales = "free", space = "free")
prop.plot <- prop.plot + theme(axis.title.x = element_blank())
marker.sub + prop.plot + plot_layout(ncol = 2, guides = "collect", height = unit(c(120), c("mm")), width = unit(c(60,20), c("mm")))
marker.sub + prop.plot + plot_layout(ncol = 2, guides = "collect", height = unit(c(180), c("mm")), width = unit(c(60,20), c("mm")))
marker.sub + prop.plot + plot_layout(ncol = 2, guides = "collect", height = unit(c(180), c("mm")), width = unit(c(80,20), c("mm")))
getwd()
pdf("Figures/Integration_markers_prop_plots.pdf", width = 10, height = 10)
marker.sub + prop.plot + plot_layout(ncol = 2, guides = "collect", height = unit(c(180), c("mm")), width = unit(c(80,20), c("mm")))
dev.off()
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 2) + NoLegend() + NoAxes()
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 2) + NoLegend() + NoAxes() + theme(text = element_text(face = "bold"))
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 3) + NoLegend() + NoAxes()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 2) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 3) + NoLegend() + NoAxes()
dev.off()
?DimPlot
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 4) + NoLegend() + NoAxes()
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 3) + NoLegend() + NoAxes()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 4) + NoLegend() + NoAxes()
dev.off()
getwd()
setwd("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/DanRer_Hypo")
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 3) + NoLegend() + NoAxes()
dev.off()
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 3, repel = T) + NoLegend() + NoAxes()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 3, repel = T) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 3, repel = F) + NoLegend() + NoAxes()
dev.off()
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.zeb, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 2.5, repel = F) + NoLegend() + NoAxes()
dev.off()
setwd("/Volumes/BZ/Home/gizevo30/R_Projects/Cavefish_Paper/AstMex_Hypo")
png("Figures/hypo_cluster_plot_Subcluster.png", height = 8, width = 8, units = "in", res = 500)
DimPlot(object = hypo.ast, group.by = "Subcluster", reduction = "tsne", pt.size = .05, label = T,  label.size = 2.5) + NoLegend() + NoAxes()
dev.off()
View(prop.plots.zeb)
